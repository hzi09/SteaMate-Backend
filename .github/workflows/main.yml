name: Django CI/CD with Docker Compose

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" > steamate/.env
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r steamate/requirements.txt

#      - name: Run Django tests
#        run: |
#          python manage.py test
#        working-directory: steamate

  deploy:
    needs: test  # 테스트 성공해야만 실행됨!
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Make SSH folder
        run: mkdir -p ~/.ssh

      - name: Debug secret
        run: echo "${{ secrets.EC2_HOST }}"
      
      - name: Check EC2_HOST is set
        run: |
          if [ -z "${{ secrets.EC2_HOST }}" ]; then
          echo "❌ EC2_HOST is EMPTY!"
          exit 1
          else
          echo "✅ EC2_HOST is present (but masked)"
          fi

      - name: Try ssh-keyscan
        run: |
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "\
            cd /home/ubuntu/SteaMate-Backend && \
            git reset --hard HEAD && \
            git clean -fd -e steamate/pickmate/models/ -e steamate/pickmate/models/* && \
            git pull origin main && \
            docker compose -f docker-compose.yaml down && \
            docker image prune -af && \
            docker compose -f docker-compose.yaml up --build -d"
